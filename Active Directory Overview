List of logon types in windows environment: https://learn.microsoft.com/en-us/windows-server/identity/securing-privileged-access/reference-tools-logon-types

What is it:

    - Distributed, heirarchical structure that allows centralized management of organization's resources, including users, computers, groups, network devices and file shares,     group policies, devices, and trusts. 

    - Provides authentication, accounting, and authorization functionalities

    - Allows admins to manage permissions and access to network resources

Terms:

    - Domain: group of objects that share the same AD database, such as users or devices.

    - Tree: one or more domains grouped. Think of this as the domains test.local, staging.test.local, and preprod.test.local, which will be in the same tree under test.local.     Multiple trees can exist in this notation.

    - forest: group of multiple trees. This is the topmost level, which is composed of all domains.

    - Organizatoinal Units (OU): Active Directory containers containing user groups, Computers, and other OUs.

    - Trust: defined as access between resources to gain permission/access to resources in another domain.

    - Domain Controller: Admin of the Active Directory used to set up the entire Directory. The role of the Domain Controller is to provide Authentication and Authorization         to different services and users. In Active Directory, the Domain Controller has the topmost priority and has the most authority/privileges.

    - Active Directory Data Store: contains Database files and processes that store and manages directory information for users, services, and applications. Active Directory        Data Store contains the file NTDS.DIT, the most critical file within an AD environment; domain controllers store it in the %SystemRoot%\NTDS folder.

    - Regular AD user account: can be used to enumerate the majority of objects contained within AD, including but not limited to:
        Domain Computers
        Domain Users
        Domain Group Information
        Default Domain Policy
        Domain Functional Levels
        Password Policy
        Group Policy Objects (GPOs)
        Kerberos Delegation
        Domain Trusts
        Access Control Lists (ACLs)

    - LDAP: systems in the network environment use to communicate with Active Directory. Domain Controller(s) run LDAP and constantly listen for requests from the network.

    - Authentication: 
        Username/Password, stored or transmitted as password hashes (LM, NTLM, NetNTLMv1/NetNTLMv2).

        Kerberos tickets (Microsoft's implementation of the Kerberos protocol). Kerberos acts as a trusted third party, working with a domain controller (DC) to authenticate          clients trying to access services. The Kerberos authentication workflow revolves around tickets that serve as cryptographic proof of identity that clients exchange            between each other, services, and the DC.

        Authentication over LDAP. Authentication is allowed via the traditional username/password or user or computer certificates.

    - Key Distribution Center (KDC): a Kerberos service installed on a DC that creates tickets. Components of the KDC are the authentication server (AS) and the ticket-             granting server (TGS).

    - Kerberos Tickets are tokens that serve as proof of identity (created by the KDC):
        TGT is proof that the client submitted valid user information to the KDC.
        TGS is created for each service the client (with a valid TGT) wants to access.

    - KDC Key: an encryption key that proves the TGT is valid. AD creates the KDC key from the hashed password of the KRBTGT account, the first account created in an AD             domain. Although it is a disabled user, KRBTGT has the vital purpose of storing secrets that are randomly generated keys in the form of password hashes. One may never         know what the actual password value represents (even if we try to configure it to a known value, AD will automatically override it to a random one).

    - RSAT: Remote Server Administration Tools enable the ability to interact with AD locally on the DC or remotely 


Important Network Ports:

    - 53: DNS
    - 88: Kerberos
    - 135: WMI/RPC
    - 137-139 & 445: SMB
    - 389 & 636: LDAP
    - 3389: RDP
    - 5985 & 5896: Powershell Remoting (WinRM)



Real World View:

    - Complexity - The simplest example is figuring out nested group members. It is easy to get lost when looking into who is a member of a group, a member of another group,        and a member of yet another group. While you may think this chain ends eventually, many environments have every 'Domain user' indirectly a member of 'Domain Admins'.

    - Design - Active Directory allows managing machines remotely via Group Policy Objects (GPOs). AD stores GPOs in a unique network share/folder called SYSVOL, where all          domain-joined devices pull settings applied to them. Because it is a network-shared folder, clients access SYSVOL via the SMB protocol and transfer stored information.        Thus, for a machine to use new settings, it has to call a Domain Controller and pull settings from SYSVOL - this is a systematic process, which by default occurs every        90 minutes. Every device must have a Domain Controller 'in sight' to pull this data from. The downside of this is that the SMB protocol also allows for code execution         (a remote command shell, where commands will be executed on the Domain Controller), so as long as we have a set of valid credentials, we can consistently execute code         over SMB on the Domain Controllers remotely. This port/protocol is available to all machines toward Domain Controllers. (Additionally, SMB is not well fit (generally          Active Directory) for the zero-trust concepts.) If an attacker has a good set of privileged credentials, they can execute code as that account on Domain Controllers           over SMB (at least!).

    - Legacy - Windows is made with a primary focus: it works out of the box for most of Microsoft's customers. Windows is not secure by default. A legacy example is that           Windows ships with the broadcasting - DNS-like protocols NetBIOS and LLMNR enabled by default. These protocols are meant to be used if DNS fails. However, they are            active even when it does not. However, due to their design, they broadcast user credentials on the wire (usernames, passwords, password hashes), which can effectively         provide privileged credentials to anyone listening on the wire by simply being there







