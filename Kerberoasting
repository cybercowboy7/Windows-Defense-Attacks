Description:

  - In AD, Service Principal Name (SPN) is a unique instance identifier. Kerberos uses SPNs for authentication to associate a service instance with a service logon account. This allows a client application to request that the service authenticate an account even if the client does not have the account name. When a Kerberos TGS service ticket is asked for, it gets encrypted with the service account's NTLM password hash.

  - Post-exploitation attack that attempts to exploit this behavior by obtaining a ticket and performing offline password crackin to open the ticker. If the ticket opens, then the candidate password that opened the ticket is the service account's password. The success of this attack depends on the strength of the service account's password. Another factor that has some impact is the encryption algorithm used when the ticket is created, with options being:
      - AES, RC4, DES (found in env. that are 15+ years old with legacy apps from the early 2000's otherwise this is disabled.)



Attack Path:

  - To obtain crackable tickets, use Rubeus https://github.com/GhostPack/Rubeus

  - Run tool with the kerberoast action
    .\Rubeus.exe kerberoast /outfile:spn.txt
      - Extracts kerberoastable tickets for all users and saves them to a text file spn.txt

  - Next, extract file with the tickets to kali machine in order to crack the hashes

  - Utilize hashcat to crack:
    hashcat -m 13100 -a 0 spn.txt passwords.txt --outfile="cracked.txt"
      - (-m) is the hash type and 13100 is the value == TGS kerberos TGS hash)
      - (-a) is the attack mode with value of 0 which is straight mode
      - spn.txt is the file with the hashes we are trying to crack
      - passwords.txt is the dictionary file with possible passwords.

  - Can also use john the ripper as an alternative way to crack the hash
    sudo john spn.txt --fork=4 --format=krb5tgs --wordlist=passwords.txt --pot=results.pot




Prevention:

  - Success of this attack is on the strength of the service account's password

  - Limit the number of accounts with SPNs and disable those no longer used/needed

  - Ensure strong password complexity policies

  - Password should be 100+ random characters (127 being maximum allowed in AD)

  - Can also use Group Managed Service Accounts (GMSA)
    - Type of service account that AD automatically manages
    - Auto rotates the password of these accounts to a random 127 characters value
    - Caveat is that not all applications support these accounts, as they work mainly with Microsoft services such as IIS and SQL and a few other apps that have made       
    integration possible
  
  - Ensure regular clea up of SPNs set to no longer valid services/servers



Detection:

  - When a TGS is requested, an event log with ID 4769 is generated. However, AD also generates the same event ID whenever a user attempts to connect to a service, which          means that the volume of this event is gigantic, and relying on it alone is virtually impossible to use as a detection method\

  - If we happen to be in an environment where all applications support AES and only AES tickets are generated, then it would be an excellent indicator to alert on event ID       4769

  - If the ticket options is set for RC4, that is, if RC4 tickets are generated in the AD environment (which is not the default configuration), then we should alert and           follow up on it.



Honeypot:

  - A honeypot user is a perfect detection option to configure in an AD environment; this must be a user with no real use/need in the environment, so no service tickets are       generated regularly. In this case, any attempt to generate a service ticket for this account is likely malicious and worth inspecting. There are a few things to ensure        when using this account:
      - The account must be a relatively old user, ideally one that has become bogus (advanced threat actors will not request tickets for new accounts because they likely             have strong passwords and the possibility of being a honeypot user).

      - The password should not have been changed recently. A good target is 2+ years, ideally five or more. But the password must be strong enough that the threat agents             cannot crack it.

      - The account must have some privileges assigned to it; otherwise, obtaining a ticket for it won't be of interest (assuming that an advanced adversary obtains tickets           only for interesting accounts/higher likelihood of cracking, e.g., due to an old password).

      - The account must have an SPN registered, which appears legit. IIS and SQL accounts are good options because they are prevalent.













